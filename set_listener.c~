#include <stdio.h>
#include "lib.h"
#include <stdlib.h>
#include <stdbool.h>

void *set_listener()
{
        char c[2];
	char *width = _tostring(dimensions[1]);
	char *height = _tostring(dimensions[0] - 1);
	char command[4];
	int pos = 0;
	int line = line_column[0];
	int column = line_column[1], c_i = 0;
	struct termios old, new;

/*      Setting terminal in non blocked to read input */
	tcgetattr(STDIN_FILENO, &old);
	new = old;
	new.c_lflag &=(~ICANON & ~ECHO);
	tcsetattr(STDIN_FILENO, TCSANOW, &new);
	char *line_arr = malloc(200);
/*      setting nul char at the end of the key listener*/
	command[3] = '\0';

/*      printing ui*/
	printf("\033[%d;0H", dimensions[1]);
	printf("\033[1;30;47m");
	int y = printf("--line: %d, column: %d--", line, column);
/*	printf(" printed %d", y);*/
	while (y <= dimensions[0])
	{
		printf(" ");
		y++;
	}
	printf("\033[0m");
	printf("\033[%d;%dH", (line + 1), column);

        while ((fgets(c, 2, stdin)))
        {
		tcsetattr(STDIN_FILENO, TCSANOW, &old);
		if (c[0] > 31 && c[0] < 127 && command[0] != 27)
		{
/*			printf("%c", c[0]);*/
			line_arr[column - 1] = c[0];
			line_arr[column] = '\0';
			column++;
		}
		if (c[0] == 127)
		{
			printf("\b");
			c_i = column - 1;
			if (column > 1)
			{
				column--;
				while (line_arr[c_i] != '\0')
				{
					line_arr[c_i - 1] = line_arr[c_i];
					line_arr[c_i] = '\0';
					c_i++;
				}
				line_arr[c_i - 1] = '\0';
			}

		}
		if (c[0] == 27)
		{
			command[0] = 27;
		}


		/* print edited line*/

		int off_x = dimensions[0];
		int count = strlen(line_arr);
		if(line < dimensions[1] - 2)
			printf("\033[%d;0H", line + 1);
		else
			printf("\033[%d;0H", dimensions[1] - 2);
		printf("%s", line_arr);
		printf("\033[s");
		if (count >= off_x)
			count = count - off_x;
		while (count < off_x)
		{
			printf(" ");
			count++;
		}
		printf("\033[u");
		/* print edited line*/


		/*move cursor*/

		if (command[0] == 27 && c[0] != 27)
		{
			if (pos < 2)
			{
				pos++;
				command[pos] = c[0];
			}
			if (pos == 2)
			{
				pos = 0;
				printf("%s", command);
/*				printf("%d", command[2]);*/
				if (command[2] == 65)
				{
					if (line > 1)
						line--;
				}
				else if (command[2] == 66)
				{
					line++;
				}
				if (command[2] == 68)
				{
					if (column > 1)
						column--;
				}
				else if (command[2] == 67)
				{
					if (line_arr[column - 1] != '\0')
						column++;
				}
				command[0] = '-';
				pos = 0;
			}
		}
		if (c[0] == 'z')
		{
			break;
		}
		printf("\033[%d;0H", dimensions[1]);
		int y = printf("\033[1;30;47m--line: %d, column: %d--", line, column);
		while (y <= dimensions[0])
		{
			printf(" ");
			y++;
		}
		printf("\033[0m");

		if (line < dimensions[1] - 2)
			printf("\033[%d;%dH", line + 1, column);
		else
			printf("\033[%d;%dH", dimensions[1] - 1, column);
		tcsetattr(STDIN_FILENO, TCSANOW, &new);
	}
	printf("\033[s\033[0;0H");
	printf("\033[2J");
	tcsetattr(STDIN_FILENO, TCSANOW, &old);
	free(width);
	free(height);
	return (NULL);
}
